---
import { Analytics } from "@vercel/analytics/react"
import { ViewTransitions } from 'astro:transitions';
import dayjs from "dayjs";
import "@fontsource/inter";
import "@/styles/globals.css";
import { HeaderDrawer } from "@/components/header-drawer";
import { BlueskyButton, GitHubButton, LinkedInButton, MailButton, TwitterButton } from '@/components/projects/buttons';
import NavLink, { type NavLinkProps } from "@/components/nav-link";

interface Props {
	title: string;
}

const { title } = Astro.props;

const navItems: NavLinkProps[] = [
	// {
	// 	title: "About",
	// 	label: "Go to about page",
	// 	href: "/about",
	// },
	{
		title: "Projects",
		href: "/projects",
	},
	// {
	// 	title: "Blog",
	// 	href: "https://what-the-chuck.com",
	// },
	{
		title: "CV",
		href: "https://cv.cbuff.dev",
		external: true,
	},
	// {
	// 	title: "Tools",
	// 	label: "Go to tools page",
	// 	href: "/tools",
	// },
];
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Charles Buffington's portfolio." />
		<meta name="keywords" content="portfolio" />
		<link rel="author" href="https://github.com/C41M50N" />
		<link rel="canonical" href="https://cbuff.dev">
		<meta property="og:url" content="https://cbuff.dev" />
		<meta property="og:title" content={title} />
		<meta property="og:description" content="Charles Buffington's portfolio." />
		<meta property="og:site_name" content="Charles Buffington" />
		<meta property="og:see_also" content="https://github.com/C41M50N" />
		<meta itemprop="name" content={title} />
		<meta itemprop="description" content="Charles Buffington's portfolio." />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<ViewTransitions />
	</head>
	<body
	class="dark min-h-screen antialiased flex flex-col items-center justify-start overscroll-y-none"
	>
		<Analytics />
		<header
			class="bg-[#171717] w-full h-16 border-b border-[#333333] fixed z-50 top-0 bg-background-2 transition-colors"
		>
			<div class="max-w-5xl w-full mx-auto px-6 md:px-0 flex items-center justify-between md:justify-around">
				<a
					href="/"
					aria-label="Go to the home page"
					class="cursor-pointer h-16 w-16"
				>
					<svg
						viewBox="0 0 384 384"
						fill="none"
						xmlns="http://www.w3.org/2000/svg"
					>
						<g id="Frame 1">
							<path id="Vector-8" d="M302.5 95.0989L311.75 144.32"></path>
							<path
								id="Vector-7"
								d="M245.5 124.964L277 108.273L302.5 95.0989L328.5 82"></path>
							<path id="Vector-6" d="M277 108.273L285 158.14"></path>
							<path
								id="Vector-5"
								d="M245.5 178.964L285 158.14L311.75 144.32L338.5 130.5"></path>
							<path id="Vector-4" d="M180.5 215C277 193.5 356 190.5 154.5 302.5"
							></path>
							<path
								id="Vector-3"
								d="M180.5 288.12C180.5 240.92 180.5 194.334 180.5 172.001"></path>
							<path
								id="Vector-2"
								d="M140.5 172.001C168.913 103.811 45 184 45 244C45 304 187.093 212.743 222.5 193.5C237.688 185.245 257.25 172.001 260 164C265.5 148 254 133.5 233.5 139.5C172.981 157.213 180.5 225 180.5 288"
							></path>
						</g>
					</svg>
				</a>

				<nav class="hidden md:block">
					<ul class="flex flex-row justify-center items-center gap-6">
						{navItems.map((item) => (
							<NavLink title={item.title} href={item.href} external={item.external} />
						))}
					</ul>
				</nav>

				<div class="md:hidden">
					<HeaderDrawer navItems={navItems} client:only="react" />
				</div>
			</div>
		</header>

		<main class="min-h-[calc(100vh-64px-144px)] w-full flex flex-col items-center justify-start mt-14 pt-1">
			<slot />
		</main>

		<footer class="max-w-5xl flex flex-row items-center justify-around py-14 w-full">
			<div class="flex flex-col">
				<span class="text-white/50 text-sm">Built with 
					<a class="text-white/90 hover:text-white/100 hover:underline" href="https://astro.build/">Astro</a>, 
					<a class="text-white/90 hover:text-white/100 hover:underline" href="https://ui.shadcn.com/">shadcn</a>, and 
					<a class="text-white/90 hover:text-white/100 hover:underline" href="https://vercel.com/">Vercel</a>.
				</span>
				<span class="text-white/50 text-sm">Copyright © {dayjs().year()} · Charles Buffington II</span>
			</div>

			<div class="flex flex-row gap-3">
				<GitHubButton className="size-[34px]" />
				<LinkedInButton className="size-[34px]" />
				<TwitterButton className="size-[34px]" />
				<BlueskyButton className="size-[34px]" />
				<MailButton className="size-[34px]" />
			</div>
		</footer>
	</body>
</html>

<style is:global>
	:root {
		--accent: 136, 58, 234;
		--accent-light: 224, 204, 250;
		--accent-dark: 49, 10, 101;
		--accent-gradient: linear-gradient(
			45deg,
			rgb(var(--accent)),
			rgb(var(--accent-light)) 30%,
			white 60%
		);
	}
	html {
		font-family: "InterVariable", sans-serif;
		background: #111111;
		/* background-size: 224px; */
		color-scheme: dark;
	}
	code {
		font-family:
			Menlo,
			Monaco,
			Lucida Console,
			Liberation Mono,
			DejaVu Sans Mono,
			Bitstream Vera Sans Mono,
			Courier New,
			monospace;
	}
</style>

<style>
  path {
		fill: none;
		stroke: rgba(233, 233, 233, 0.95);
		stroke-width: 10;
		stroke-linecap: round;
		stroke-linejoin: round;
	}

	path#Vector-2 {
		stroke-dasharray: 700;
		animation-name: drawV2;
		animation-duration: 7s;
		animation-timing-function: cubic-bezier(0.455, 0.03, 0.515, 0.955);
		animation-iteration-count: infinite;
	}

	path#Vector-3 {
		stroke-dasharray: 120;
		animation-name: drawV3;
		animation-duration: 7s;
		animation-timing-function: cubic-bezier(0.19, 1, 0.22, 1);
		animation-iteration-count: infinite;
	}

	path#Vector-4 {
		stroke-dasharray: 270;
		animation-name: drawV4;
		animation-duration: 7s;
		animation-timing-function: cubic-bezier(0.165, 0.84, 0.44, 1);
		animation-iteration-count: infinite;
	}

	path#Vector-5 {
		stroke-dasharray: 105;
		animation-name: drawV5;
		animation-duration: 7s;
		animation-timing-function: cubic-bezier(0.165, 0.84, 0.44, 1);
		animation-iteration-count: infinite;
	}

	path#Vector-6 {
		stroke-dasharray: 50;
		animation-name: drawV6;
		animation-duration: 7s;
		animation-timing-function: linear;
		animation-iteration-count: infinite;
	}

	path#Vector-7 {
		stroke-dasharray: 100;
		animation-name: drawV7;
		animation-duration: 7s;
		animation-timing-function: cubic-bezier(0.165, 0.84, 0.44, 1);
		animation-iteration-count: infinite;
	}

	path#Vector-8 {
		stroke-dasharray: 50;
		animation-name: drawV8;
		animation-duration: 7s;
		animation-timing-function: linear;
		animation-iteration-count: infinite;
	}

	@keyframes drawV2 {
		0% {
			stroke-dashoffset: 700;
			opacity: 0;
		}
		15% {
			opacity: 1;
		}
		50% {
			stroke-dashoffset: 0;
		}
	}

	@keyframes drawV3 {
		0%, 40% {
			stroke-dashoffset: 120;
			opacity: 0;
		}
		50% {
			stroke-dashoffset: 0;
			opacity: 1;
		}
	}

	@keyframes drawV4 {
		0%, 23.5% {
			stroke-dashoffset: 270;
			opacity: 0;
		}
    23.5% {
      opacity: 1;
    }
		50% {
			stroke-dashoffset: 0;
		}
	}

	@keyframes drawV5 {
		0%, 27% {
			stroke-dashoffset: 105;
			opacity: 0;
		}
		27% {
			opacity: 1;
		}
		50% {
			stroke-dashoffset: 0;
		}
	}

	@keyframes drawV6 {
		0%, 28% {
			stroke-dashoffset: 50;
			opacity: 0;
		}
    30% {
      opacity: 1;
    }
		40% {
			opacity: 1;
		}
		50% {
			stroke-dashoffset: 0;
		}
	}

	@keyframes drawV7 {
    0%, 28% {
      stroke-dashoffset: 100;
      opacity: 0;
    }
		28% {
      opacity: 0.20;
		}
		35% {
			opacity: 1;
		}
		50% {
			stroke-dashoffset: 0;
		}
	}

	@keyframes drawV8 {
		0%, 30% {
			stroke-dashoffset: 50;
			opacity: 0;
		}
		31% {
			opacity: 1;
		}
		50% {
			stroke-dashoffset: 0;
		}
	}
</style>
